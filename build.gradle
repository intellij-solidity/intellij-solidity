buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "org.jetbrains.intellij" version "0.1.8"
    id 'net.researchgate.release' version '2.4.0'
}


apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.intellij'
apply plugin: 'idea'
apply plugin: 'jacoco'

sourceCompatibility = 1.8

idea {
    module {
        generatedSourceDirs += file('gen')
    }
}

sourceSets {
    main {
        java.srcDirs += 'gen'
    }
}

clean.doFirst {
    delete 'gen'
}

intellij {
    pluginName 'Intellij-Solidity'

    version '2016.3.2'
    downloadSources true
    updateSinceUntilBuild = false

    sandboxDirectory project.rootDir.canonicalPath + "/.sandbox"
    systemProperties = ['compiler.process.debug.port': '21232']
}

repositories {
    jcenter()
}

configurations {
    lexer
    parser
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile("io.sentry:sentry:$sentry_version") {
        // IntelliJ uses slf4j which results in a class loader conflict
        exclude group: 'org.slf4j'
    }

    // https://mvnrepository.com/artifact/org.ethereum/ethereumj-core
    compileOnly( group: 'org.ethereum', name: 'ethereumj-core', version: '1.5.0-RELEASE') {
        exclude group: 'org.ethereum', module: 'solcJ-all'
    }

    testCompile group: 'junit', name: 'junit', version: '4.11'

    lexer files('lib/jflex-1.7.0-SNAPSHOT.jar') //'de.jflex:jflex:1.6.1'
    parser files('lib/grammar-kit-1.5.0.jar')
}

release {
    newVersionCommitMessage = '[Intellij-Solidity Release] - '
    preTagCommitMessage = '[Intellij-Solidity Release] - pre tag commit: '
    buildTasks = ['buildPlugin']
}


task codegen(dependsOn: ['lexer', 'parser']) {}
tasks.compileKotlin.dependsOn codegen

task lexer(type: JavaExec) {
    def lexerName = "_SolidityLexer"
    def pkg = "me/serce/solidity"
    def src = "$project.projectDir/src/main/grammars/${lexerName}.flex"
    def dst = "gen/$pkg"
    new File(dst).mkdirs()

    main = 'jflex.Main'
    classpath configurations.lexer
    args = ['--skel', 'src/main/grammars/idea-flex.skeleton', '-d', dst, src]

    inputs.file file(src)
    outputs.dir file("$dst/${lexerName}.java")
}

task parser(type: JavaExec) {
    def pkg = 'me/serce/solidity/lang'
    def dstRoot = "gen"
    def src = "$project.projectDir/src/main/grammars/solidity.bnf"
    def dst = "$dstRoot/$pkg"
    doFirst {
        delete file(dst)
    }

    main = 'org.intellij.grammar.Main'
    classpath(configurations.compile + configurations.parser)

    args = [dstRoot, file(src)]

    inputs.file file(src)
    outputs.dir dst
}

// codecov

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport
