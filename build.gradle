buildscript {
    repositories {
        jcenter()
        maven { url 'https://jitpack.io'}
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.JetBrains:gradle-grammar-kit-plugin:2018.1.1"
    }
}

plugins {
    id 'org.jetbrains.intellij' version '0.3.1'
    id 'net.researchgate.release' version '2.4.0'
}


apply plugin: 'java'
apply plugin: 'org.jetbrains.grammarkit'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.intellij'
apply plugin: 'idea'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = 1.8
}

idea {
    module {
        generatedSourceDirs += file('gen')
    }
}

sourceSets {
    main {
        java.srcDirs += 'gen'
    }
}

clean.doFirst {
    delete 'gen'
}

intellij {
    pluginName 'Intellij-Solidity'

    version '2016.3.2'
    downloadSources true
    updateSinceUntilBuild = false

    sandboxDirectory project.rootDir.canonicalPath + "/.sandbox"
    systemProperties = ['compiler.process.debug.port': '21232']
}

grammarKit {
    grammarKitRelease = '1.5.0'
    jflexRelease = '1.7.0'
}

repositories {
    jcenter()
}

configurations {
    lexer
    parser
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile("io.sentry:sentry:$sentry_version") {
        // IntelliJ uses slf4j which results in a class loader conflict
        exclude group: 'org.slf4j'
    }

    // https://mvnrepository.com/artifact/org.ethereum/ethereumj-core
    compileOnly( group: 'org.ethereum', name: 'ethereumj-core', version: '1.7.0-RELEASE') {
        exclude group: 'org.ethereum', module: 'solcJ-all'
        exclude group: 'org.ethereum', module: 'rocksdbjni'
    }

    compile group: 'org.web3j', name: 'codegen', version: '3.3.1'

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

release {
    newVersionCommitMessage = '[Intellij-Solidity Release] - '
    preTagCommitMessage = '[Intellij-Solidity Release] - pre tag commit: '
    buildTasks = ['buildPlugin']
}


task codegen(dependsOn: ['lexer', 'parser']) {}
tasks.compileKotlin.dependsOn codegen

task lexer(type: org.jetbrains.grammarkit.tasks.GenerateLexer) {
    def lexerName = "_SolidityLexer"
    source = "$project.projectDir/src/main/grammars/${lexerName}.flex"
    targetDir = "gen/me/serce/solidity"
    targetClass = "$lexerName"
    skeleton = 'src/main/grammars/idea-flex.skeleton'
    purgeOldFiles = true
}

task parser(type: org.jetbrains.grammarkit.tasks.GenerateParser) {
    dependsOn lexer

    def pkg = 'me/serce/solidity'
    source = "$project.projectDir/src/main/grammars/solidity.bnf"
    targetRoot = 'gen'
    pathToParser = "$pkg/SolidityParser.java"
    pathToPsiRoot = "$pkg/psi"
    purgeOldFiles = true

    outputs.dir(new File("$targetRoot/$pkg"))
}


// codecov

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport
