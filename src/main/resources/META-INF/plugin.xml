<idea-plugin version="2">
    <id>me.serce.solidity</id>
    <name>Intellij-Solidity</name>
    <vendor email="sergeicelov@gmail.com" url="https://github.com/intellij-solidity">Intellij Solidity</vendor>

    <description><![CDATA[
      IntelliJ solidity support

      <p>
        You can support the plugin development by clicking star on <a href="https://github.com/intellij-solidity/intellij-solidity">GitHub</a>
        and rating it on the <a href="https://plugins.jetbrains.com/plugin/9475-intellij-solidity">plugin page</a>.
      </p>
      <p>
        Contributions are always welcome!
      </p>
    ]]></description>

    <change-notes><![CDATA[
      <p>
        <b>v2.1.5</b>
        <ul>
          <li>Allow for a declaration list without var</li>
          <li>Add support for calldata storage location</li>
          <li>Function resolve using types, thanks 0v1se!</li>
          <li>Resolve global functions, thanks 0v1se!</li>
          <li>Type inference for function calls, thanks 0v1se!</li>
          <li>
            "No return" inspection improvements, thanks @0v1se!
            Inspection to catch possible errors when function doesn't return a result. The inspection
            can be enabled in Editor->Inspections->Solidity->No return statement. Let us know what you think!
            The inspection is planned to be enabled by default in the next release.
          </li>
        </ul>
        <b>v2.1.4</b>
        <ul>
          <li>Resolve vars from tuples, thanks @0v1se</li>
          <li>
            "No return" inspection improvements, thanks @0v1se!
            Inspection to catch possible errors when function doesn't return a result. The inspection
            can be enabled in Editor->Inspections->Solidity->No return statement. Let us know what you think!
          </li>
          <li>Resolve library calls, thanks @0v1se</li>
          <li>Fixes for var/function resolving, thanks @0v1se</li>
          <li>Use abi to generate EthJ stubs, thanks @mbolotov</li>
          <li>Fix parameter info for variables, thanks @0v1se</li>
          <li>Update web3j version to 4.0.1, thanks @mbolotov</li>
          <li>Incremental compilation for solc, thanks @mbolotov</li>
          <li>Do not throw exception in context menu on non-java IDEs, thanks @mbolotov</li>
          <li>Multiple grammar fixes</li>
        </ul>
      </p>
    ]]>
    </change-notes>

    <idea-version since-build="163.0"/>


    <depends>com.intellij.modules.lang</depends>

    <extensions defaultExtensionNs="com.intellij">
        <configurationType implementation="me.serce.solidity.ide.run.SolidityConfigurationType" />
        <applicationService serviceImplementation="me.serce.solidity.ide.run.SolidityRunConfigurationExtensionManager"/>

        <fileTypeFactory implementation="me.serce.solidity.lang.SolidityFileTypeFactory"/>

        <lang.parserDefinition language="Solidity"
                               implementationClass="me.serce.solidity.lang.core.SolidityParserDefinition"/>

        <lang.syntaxHighlighterFactory language="Solidity"
                                       implementationClass="me.serce.solidity.ide.SolHighlighterFactory"/>

        <annotator language="Solidity" implementationClass="me.serce.solidity.ide.annotation.SolidityAnnotator"/>

        <renamePsiElementProcessor implementation="me.serce.solidity.ide.refactoring.RenameContractProcessor"/>
        <renamePsiElementProcessor implementation="me.serce.solidity.ide.refactoring.RenameConstructorProcessor"/>

        <!-- Commenter -->
        <lang.commenter language="Solidity" implementationClass="me.serce.solidity.ide.SolCommenter"/>

        <!-- Brace Matcher -->
        <lang.braceMatcher language="Solidity" implementationClass="me.serce.solidity.ide.SolBraceMatcher"/>

        <!-- Quote Handlers -->
        <lang.quoteHandler language="Solidity" implementationClass="me.serce.solidity.ide.SolQuoteTokenHandler"/>

        <!-- Hints -->
        <codeInsight.typeInfo language="Solidity"
                              implementationClass="me.serce.solidity.ide.hints.SolExpressionTypeProvider"/>
        <codeInsight.parameterInfo language="Solidity"
                                   implementationClass="me.serce.solidity.ide.hints.SolParameterInfoHandler"/>

        <completion.contributor language="Solidity"
                                implementationClass="me.serce.solidity.lang.completion.SolBaseTypesCompletionContributor"/>
        <completion.contributor language="Solidity"
                                implementationClass="me.serce.solidity.lang.completion.SolKeywordCompletionContributor"/>
        <completion.contributor language="Solidity"
                                implementationClass="me.serce.solidity.lang.completion.SolFunctionCompletionContributor"/>
        <completion.contributor language="Solidity"
                                implementationClass="me.serce.solidity.lang.completion.SolContextCompletionContributor"/>

        <lang.formatter language="Solidity"
                        implementationClass="me.serce.solidity.ide.formatting.SolidityFormattingModelBuilder"/>

        <codeInsight.lineMarkerProvider language="Solidity"
                                        implementationClass="me.serce.solidity.ide.annotation.SolidityLineMarkerProvider"/>


        <internalFileTemplate name="Solidity Contract"/>
        <internalFileTemplate name="Solidity Library"/>

        <stubIndex implementation="me.serce.solidity.lang.stubs.SolNamedElementIndex"/>
        <stubIndex implementation="me.serce.solidity.lang.stubs.SolGotoClassIndex"/>
        <stubIndex implementation="me.serce.solidity.lang.stubs.SolModifierIndex"/>
        <stubIndex implementation="me.serce.solidity.lang.stubs.SolEventIndex"/>
        <stubIndex implementation="me.serce.solidity.lang.stubs.SolFunctionIndex"/>
        <stubIndex implementation="me.serce.solidity.lang.stubs.SolImportIndex"/>

        <gotoClassContributor implementation="me.serce.solidity.ide.navigation.SolClassNavigationContributor"/>
        <gotoSymbolContributor implementation="me.serce.solidity.ide.navigation.SolSymbolNavigationContributor"/>
        <definitionsScopedSearch implementation="me.serce.solidity.ide.navigation.SolContractImplementationSearcher"/>

        <lang.foldingBuilder language="Solidity" implementationClass="me.serce.solidity.ide.SolidityFoldingBuilder"/>

        <lang.findUsagesProvider language="Solidity" implementationClass="me.serce.solidity.ide.SolFindUsagesProvider"/>

        <spellchecker.support language="Solidity" implementationClass="me.serce.solidity.ide.SolSpellcheckingStrategy"/>

        <!-- Code style -->

        <codeStyleSettingsProvider implementation="me.serce.solidity.ide.formatting.SolCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider
                implementation="me.serce.solidity.ide.formatting.SolLanguageCodeStyleSettingsProvider"/>

        <!-- Color settings -->
        <colorSettingsPage implementation="me.serce.solidity.ide.colors.SolColorSettingsPage"/>


        <lang.psiStructureViewFactory language="Solidity"
                                      implementationClass="me.serce.solidity.ide.SolPsiStructureViewFactory"/>

        <lang.inspectionSuppressor language="Solidity"
                                   implementationClass="me.serce.solidity.ide.inspections.SolInspectionSuppressor"/>

        <localInspection language="Solidity" groupName="Solidity"
                         displayName="suicide is deprecated. Use seldestruct instead EIP 6"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="me.serce.solidity.ide.inspections.SelfdestructRenameInspection"/>

        <localInspection language="Solidity" groupName="Solidity"
                         displayName="Function has no modifiers and might modify owners of the contract"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="me.serce.solidity.ide.inspections.UnprotectedFunctionInspection"/>

        <localInspection language="Solidity" groupName="Solidity"
                         displayName="Name can not be resolved"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="me.serce.solidity.ide.inspections.ResolveNameInspection"/>

        <localInspection language="Solidity" groupName="Solidity"
                         displayName="No return statement"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="me.serce.solidity.ide.inspections.NoReturnInspection"/>

        <localInspection language="Solidity" groupName="Solidity"
                         displayName="Linearization impossible"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="me.serce.solidity.ide.inspections.LinearizationImpossibleInspection"/>

        <errorHandler implementation="me.serce.solidity.ide.SentryReportSubmitter"/>
        <runConfigurationProducer implementation="me.serce.solidity.ide.run.SolidityRunConfigProducer"/>
        <runLineMarkerContributor language="Solidity" implementationClass="me.serce.solidity.ide.run.SolidityRunLineMarkerProvider"/>
        <applicationService serviceInterface="me.serce.solidity.ide.settings.SoliditySettings" serviceImplementation="me.serce.solidity.ide.settings.SoliditySettings"/>
        <applicationConfigurable groupId="language" displayName="Solidity" id="preferences.Solidity" instance="me.serce.solidity.ide.settings.SoliditySettingsConfigurable"/>
        <compilerFactory implementation="me.serce.solidity.ide.run.compile.SolidityCompileFactory"/>
    </extensions>

    <actions>
        <action id="solidity.file.create"
                class="me.serce.solidity.ide.actions.SolCreateFileAction"
                text="Smart contract" description="Create new solidity contract">
            <add-to-group group-id="NewGroup" anchor="after" relative-to-action="NewDir"/>
        </action>

        <group id="myGroupId">
            <separator/>
            <action id="Solidity.Compile"
                    class="me.serce.solidity.ide.run.compile.SolCompileAction"
                    text="Compile _Solidity" description="Compile Solidity files">

                <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl S"/>
            </action>
            <separator/>
            <add-to-group group-id="BuildMenu" relative-to-action="CompileProject" anchor="before"/>
        </group>
    </actions>

    <application-components>
        <!-- Add your project components here -->
    </application-components>

    <project-components>
        <component>
            <interface-class>me.serce.solidity.lang.types.SolInternalTypeFactory</interface-class>
            <implementation-class>me.serce.solidity.lang.types.SolInternalTypeFactory</implementation-class>
        </component>
    </project-components>

    <module-components>
        <!-- Add your modules components here -->
    </module-components>


</idea-plugin>
