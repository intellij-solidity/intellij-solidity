<idea-plugin>
    <id>me.serce.solidity</id>
    <name>Solidity</name>
    <vendor email="sergeicelov@gmail.com" url="https://github.com/intellij-solidity">Intellij Solidity</vendor>

    <description><![CDATA[
      Solidity support for IntelliJ.

      <p>
        You can support the plugin development by <a href="https://github.com/intellij-solidity/intellij-solidity">sponsoring</a> ‚ù§Ô∏è the plugin on Github,
        or by clicking star on <a href="https://github.com/intellij-solidity/intellij-solidity">GitHub</a>
        and rating it on the <a href="https://plugins.jetbrains.com/plugin/9475-intellij-solidity">plugin page</a>.
      </p>
      <p>
        Contributions are always welcome!
      </p>
    ]]></description>

    <change-notes><![CDATA[
      <p>
        Thank you for your support! Huge thank you to
        all of you who sponsor the plugin development, @punk3155 in particular!‚ù§Ô∏è

        <b>v2.4.6</b>
        In this release:
        <ul>
        <ul>
          <li>Fixed stack overflow in circular imports, thank you @Paulalex85!</li>
          <li>Fixed import resolution for libraries with identical names, thank you @Paulalex85!</li>
          <li>Added cache to import collection for faster indexing, thank you @Paulalex85!</li>
          <li>Fixed resolution of functions from imported contracts with custom types and <code>using</code>, thank you @Paulalex85!</li>
          <li>Added file-level <code>using for</code> support, thank you @Paulalex85!</li>
          <li>Fixed resolving of elements imported with aliases, thank you @Paulalex85!</li>
          <li>Improved file-level import handling, thank you @Paulalex85!</li>
          <li>Support foundry <code>remappings.toml</code>, thank you @Paulalex85!</li>
          <li>Fixed "Find Usages" for modifiers, thank you @Paulalex85!</li>
          <li>Added references for contracts in the inherited doc tag values, thank you @mbolotov!</li>
          <li>Function and contract resolution with aliases, thank you @Paulalex85!</li>
          <li>Added latest EVM opcode set, thank you @Paulalex85!</li>
        </ul>
        </ul>
        <b>v2.4.5</b>
        In this release:
        <ul>
          <li>Updated solidity version in the templates, thank you @ereztdev!</li>
          <li>Resolved StackOverflowError on imports with the same name, yours @SerCeMan!</li>
          <li>Supported string casting in fixed bytes types, thank you @Paulalex85!</li>
          <li>Enabled hints for function call arguments, thank you @mbolotov!</li>
          <li>Fixed documentation display for functions with modifiers, thank you @mbolotov!</li>
          <li>Inline rename refactoring, thank you @mbolotov!</li>
          <li>New Optimize imports action, thank you @mbolotov!</li>
          <li>Added hierarchy view provider, thank you @mbolotov!</li>
        </ul>

        A special thank you to tetu.io who made the @mboloov's contributions possible! üéâ
      </p>
    ]]>
    </change-notes>

    <!--
        See https://plugins.jetbrains.com/docs/intellij/build-number-ranges.html
        See https://youtrack.jetbrains.com/articles/IDEA-A-2100661478/IntelliJ-IDEA-2023.1-231.8109.175-build-Release-Notes
        231.8109.175 is IntelliJ IDEA 2023.1
    -->
    <idea-version since-build="231.8109.175"/>

    <!-- See https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html for the full list of modules -->
    <depends>com.intellij.modules.lang</depends>
    <!--
        The below might not be strictly necessary, however, it's required as per
        https://plugins.jetbrains.com/docs/intellij/webstorm.html#configuring-plugin-projects-targeting-webstorm
        in order to include JavaScript.
    -->
    <depends>com.intellij.modules.platform</depends>
    <!-- The dependency is necessary because JavaScript-aware IDEs exclude node_modules by default. -->
    <depends optional="true" config-file="javascriptPlugin.xml">JavaScript</depends>

    <extensions defaultExtensionNs="com.intellij">
        <fileType name="Solidity file"
                  language="Solidity"
                  implementationClass="me.serce.solidity.lang.SolidityFileType"
                  extensions="sol"
                  fieldName="INSTANCE"/>
        <projectService serviceImplementation="me.serce.solidity.lang.types.SolInternalTypeFactory"/>

        <lang.parserDefinition language="Solidity"
                               implementationClass="me.serce.solidity.lang.core.SolidityParserDefinition"/>

        <lang.syntaxHighlighterFactory language="Solidity"
                                       implementationClass="me.serce.solidity.ide.SolHighlighterFactory"/>

        <annotator language="Solidity" implementationClass="me.serce.solidity.ide.annotation.SolidityAnnotator"/>

        <renamePsiElementProcessor implementation="me.serce.solidity.ide.refactoring.RenameContractProcessor"/>
        <renamePsiElementProcessor implementation="me.serce.solidity.ide.refactoring.RenameConstructorProcessor"/>
        <renamePsiElementProcessor implementation="me.serce.solidity.ide.refactoring.SolRenameFileProcessor"/>
        <refactoring.moveHandler implementation="me.serce.solidity.ide.refactoring.SolMoveHandler" order="first"/>
        <lang.refactoringSupport language="Solidity" implementationClass="me.serce.solidity.ide.refactoring.SolRenameFileRefactoringSupportProvider"/>

        <lang.importOptimizer language="Solidity" implementationClass="me.serce.solidity.ide.formatting.SolImportOptimizer"/>

        <!-- Commenter -->
        <lang.commenter language="Solidity" implementationClass="me.serce.solidity.ide.SolCommenter"/>

        <!-- Block comment typing support -->
        <enterHandlerDelegate implementation="me.serce.solidity.ide.typing.SolBlockCommentEnterHandler"/>

        <!-- Brace Matcher -->
        <lang.braceMatcher language="Solidity" implementationClass="me.serce.solidity.ide.SolBraceMatcher"/>

        <!-- Quote Handlers -->
        <lang.quoteHandler language="Solidity" implementationClass="me.serce.solidity.ide.SolQuoteTokenHandler"/>

        <lang.documentationProvider language="Solidity" implementationClass="me.serce.solidity.ide.hints.SolDocumentationProvider"/>

        <codeInsight.parameterNameHints implementationClass="me.serce.solidity.ide.hints.SolParameterInlayHintProvider"
                                        language="Solidity"/>

        <!-- Hints -->
        <codeInsight.typeInfo language="Solidity"
                              implementationClass="me.serce.solidity.ide.hints.SolExpressionTypeProvider"/>
        <codeInsight.parameterInfo language="Solidity"
                                   implementationClass="me.serce.solidity.ide.hints.SolParameterInfoHandler"/>
        <codeInsight.daemonBoundCodeVisionProvider implementation="me.serce.solidity.ide.hints.SolGasEstimationInlayProvider"/>

        <completion.contributor language="Solidity"
                                implementationClass="me.serce.solidity.lang.completion.SolBaseTypesCompletionContributor"/>
        <completion.contributor language="Solidity"
                                implementationClass="me.serce.solidity.lang.completion.SolKeywordCompletionContributor"/>
        <completion.contributor language="Solidity"
                                implementationClass="me.serce.solidity.lang.completion.SolFunctionCompletionContributor"/>
        <completion.contributor language="Solidity"
                                implementationClass="me.serce.solidity.lang.completion.SolContextCompletionContributor"/>
        <completion.contributor language="Solidity"
                                implementationClass="me.serce.solidity.lang.completion.SolNatSpecCompletionContributor"/>

        <psi.referenceContributor language="Solidity"
                                  implementation="me.serce.solidity.lang.completion.SolDocReferenceContributor"/>


        <lang.formatter language="Solidity"
                        implementationClass="me.serce.solidity.ide.formatting.SolidityFormattingModelBuilder"/>

        <codeInsight.lineMarkerProvider language="Solidity"
                                        implementationClass="me.serce.solidity.ide.annotation.ForgeTestLineMarkerProvider" order="first"/>
        <codeInsight.lineMarkerProvider language="Solidity"
                                        implementationClass="me.serce.solidity.ide.annotation.SolidityLineMarkerProvider"/>


        <internalFileTemplate name="Solidity Contract"/>
        <internalFileTemplate name="Solidity Library"/>

        <stubIndex implementation="me.serce.solidity.lang.stubs.SolNamedElementIndex"/>
        <stubIndex implementation="me.serce.solidity.lang.stubs.SolGotoClassIndex"/>
        <stubIndex implementation="me.serce.solidity.lang.stubs.SolModifierIndex"/>
        <stubIndex implementation="me.serce.solidity.lang.stubs.SolEventIndex"/>
        <stubIndex implementation="me.serce.solidity.lang.stubs.SolErrorIndex"/>
        <stubIndex implementation="me.serce.solidity.lang.stubs.SolFunctionIndex"/>
        <stubIndex implementation="me.serce.solidity.lang.stubs.SolImportIndex"/>

        <gotoClassContributor implementation="me.serce.solidity.ide.navigation.SolClassNavigationContributor"/>
        <gotoSymbolContributor implementation="me.serce.solidity.ide.navigation.SolSymbolNavigationContributor"/>
        <definitionsScopedSearch implementation="me.serce.solidity.ide.navigation.SolContractImplementationSearcher"/>

        <lang.foldingBuilder language="Solidity" implementationClass="me.serce.solidity.ide.SolidityFoldingBuilder"/>
        <customFoldingProvider implementation="me.serce.solidity.ide.VisualStudioCustomFoldingProvider"/>

        <lang.findUsagesProvider language="Solidity" implementationClass="me.serce.solidity.ide.SolFindUsagesProvider"/>

        <spellchecker.support language="Solidity" implementationClass="me.serce.solidity.ide.SolSpellcheckingStrategy"/>

        <!-- Code style -->

        <codeStyleSettingsProvider implementation="me.serce.solidity.ide.formatting.SolCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider
                implementation="me.serce.solidity.ide.formatting.SolLanguageCodeStyleSettingsProvider"/>

        <!-- Color settings -->
        <colorSettingsPage implementation="me.serce.solidity.ide.colors.SolColorSettingsPage"/>


        <lang.psiStructureViewFactory language="Solidity"
                                      implementationClass="me.serce.solidity.ide.SolPsiStructureViewFactory"/>

        <lang.inspectionSuppressor language="Solidity"
                                   implementationClass="me.serce.solidity.ide.inspections.SolInspectionSuppressor"/>

        <localInspection language="Solidity" groupName="Solidity"
                         displayName="Suicide is deprecated. Use selfdestruct instead EIP 6"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="me.serce.solidity.ide.inspections.SelfdestructRenameInspection"/>

        <localInspection language="Solidity" groupName="Solidity"
                         displayName="Function has no modifiers and might modify owners of the contract"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="me.serce.solidity.ide.inspections.UnprotectedFunctionInspection"/>

        <localInspection language="Solidity" groupName="Solidity"
                         displayName="Name can not be resolved"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="me.serce.solidity.ide.inspections.ResolveNameInspection"/>

        <localInspection language="Solidity" groupName="Solidity"
                         displayName="No return statement"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="me.serce.solidity.ide.inspections.NoReturnInspection"/>

        <localInspection language="Solidity" groupName="Solidity"
                         displayName="Linearization impossible"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="me.serce.solidity.ide.inspections.LinearizationImpossibleInspection"/>

        <localInspection language="Solidity" groupName="Solidity"
                         displayName="Function call arguments are not matched with the parameters of function definition"
                         enabledByDefault="false"
                         level="ERROR"
                         implementationClass="me.serce.solidity.ide.inspections.ValidateFunctionArgumentsInspection"/>

        <localInspection language="Solidity" groupName="Solidity"
                         displayName="Event emit arguments are not matched with the parameters of event definition"
                         enabledByDefault="false"
                         level="ERROR"
                         implementationClass="me.serce.solidity.ide.inspections.ValidateEmitEventArgumentsInspection"/>

        <localInspection language="Solidity" groupName="Solidity"
                         displayName="Visibility modifier not specified for a function or state variable"
                         enabledByDefault="true"
                         level="WEAK WARNING"
                         implementationClass="me.serce.solidity.ide.inspections.VisibilityModifierInspection"/>

        <localInspection language="Solidity" groupName="Solidity"
                                 displayName="Member is not defined"
                                 enabledByDefault="true"
                                 level="WEAK WARNING"
                                 implementationClass="me.serce.solidity.ide.inspections.ValidateMemberAccessInspection"/>

        <localInspection language="Solidity" groupName="Solidity"
                                 displayName="Element is never used"
                                 enabledByDefault="false"
                                 level="WEAK WARNING"
                                 implementationClass="me.serce.solidity.ide.inspections.UnusedElementInspection"/>

        <!-- Forge Test Runner -->
        <configurationType implementation="me.serce.solidity.ide.run.ForgeTestRunConfigurationType"/>
        <runConfigurationProducer
                implementation="me.serce.solidity.ide.run.ForgeTestRunConfigurationProducer" />

        <errorHandler implementation="me.serce.solidity.ide.SentryReportSubmitter"/>

        <defaultLiveTemplates file="/liveTemplates/Solidity.xml"/>
        <liveTemplateContext
                implementation="me.serce.solidity.ide.liveTemplates.SolTemplateContextType"/>

        <lang.structureViewExtension implementation="me.serce.solidity.ide.SolStructureViewExtension"/>

        <typeHierarchyProvider language="Solidity" implementationClass="me.serce.solidity.ide.SolHierarchyTypeProvider"/>
    </extensions>

    <actions>
        <action id="solidity.file.create"
                class="me.serce.solidity.ide.actions.SolCreateFileAction"
                text="Smart Contract" description="Create new solidity contract">
            <add-to-group group-id="NewGroup" anchor="after" relative-to-action="NewDir"/>
        </action>
        <action id="solidity.show.gas.estimation"
                class="me.serce.solidity.ide.hints.ShowGasEstimationAction"
                text="Show Gas Estimation" description="Show gas estimation for functions as calculated by solc compiler">
            <add-to-group group-id="AnalyzeActions" anchor="last"/>
        </action>

    </actions>

</idea-plugin>
