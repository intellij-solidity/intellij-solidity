<idea-plugin>
    <id>me.serce.solidity</id>
    <name>Solidity</name>
    <vendor email="sergeicelov@gmail.com" url="https://github.com/intellij-solidity">Intellij Solidity</vendor>

    <description><![CDATA[
      Solidity support for IntelliJ.

      <p>
        You can support the plugin development by <a href="https://github.com/intellij-solidity/intellij-solidity">sponsoring</a> ❤️ the plugin on Github,
        supporting the project on <a href="https://gitcoin.co/grants/1047/intellij-solidity">GitCoin</a>, or by clicking star on <a href="https://github.com/intellij-solidity/intellij-solidity">GitHub</a>
        and rating it on the <a href="https://plugins.jetbrains.com/plugin/9475-intellij-solidity">plugin page</a>.
      </p>
      <p>
        Contributions are always welcome!
      </p>
    ]]></description>

    <change-notes><![CDATA[
      <p>
        Thank you for your support! Huge thank you to
        <p>all participants of the last GitCoin round, Yenwen Feng (@tempofeng), and LevX (@LevxApp) in particular! https://gitcoin.co/grants/1047/intellij-solidity!❤️</p>
        <p>all of you who sponsor the plugin development, @Lumyo and Tyler Smith (@tyler-smith) in particular!❤️</p>

        <b>v2.4.0</b>
        Note that the minimum supported IntelliJ version of this release is 2022.2.5.
        <br/>
        In this release:
        <ul>
          <li>Improve performance of resolving, yours @SerCeMan</li>
          <li>Support user-defined operators, yours @SerCeMan</li>
          <li>Code docs generation, thanks @mbolotov!</li>
          <li>Fix built-in member access, thanks @mbolotov!</li>
          <li>Resolve a for loop variable, thanks @mbolotov!</li>
          <li>Fix function modifier rename refactoring, thanks @mbolotov!</li>
          <li>Allow named parameters in mapping types, yours @SerCeMan</li>
        </ul>
        <b>v2.3.11</b>
        In this release:
        <ul>
          <li>Allow destructuring inside try-catch block, yours @SerCeMan</li>
          <li>Fix block comment parsing when it includes /*/, yours @SerCeMan</li>
          <li>Support adding "Live Templates", thanks @carter-ya!</li>
          <li>Support create smart contract interface, thanks @carter-ya!</li>
          <li>Add remappings.txt support for foundry, thanks @dyzz!</li>
          <li>Fix highlighting for payable, immutable, receive, fallback, and enum values, thanks @apottere!</li>
          <li>Resolve top-level Enums, Structs, Errors, and user-defined types, thanks @apottere!</li>
        </ul>
      </p>
    ]]>
    </change-notes>

    <!--
        See https://plugins.jetbrains.com/docs/intellij/build-number-ranges.html
        See https://youtrack.jetbrains.com/articles/IDEA-A-2100661473/IntelliJ-IDEA-2022.2.5-222.4554.10-build-Release-Notes
        222.4554.10 is IntelliJ IDEA 2022.2.5
    -->
    <idea-version since-build="222.4554.10"/>

    <!-- See https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html for the full list of modules -->
    <depends>com.intellij.modules.lang</depends>
    <!--
        The below might not be strictly necessary, however, it's required as per
        https://plugins.jetbrains.com/docs/intellij/webstorm.html#configuring-plugin-projects-targeting-webstorm
        in order to include JavaScript.
    -->
    <depends>com.intellij.modules.platform</depends>
    <!-- The dependency is necessary because JavaScript-aware IDEs exclude node_modules by default. -->
    <depends optional="true" config-file="javascriptPlugin.xml">JavaScript</depends>

    <extensions defaultExtensionNs="com.intellij">
        <fileType name="Solidity file"
                  language="Solidity"
                  implementationClass="me.serce.solidity.lang.SolidityFileType"
                  extensions="sol"
                  fieldName="INSTANCE"/>
        <projectService serviceImplementation="me.serce.solidity.lang.types.SolInternalTypeFactory"/>

        <lang.parserDefinition language="Solidity"
                               implementationClass="me.serce.solidity.lang.core.SolidityParserDefinition"/>

        <lang.syntaxHighlighterFactory language="Solidity"
                                       implementationClass="me.serce.solidity.ide.SolHighlighterFactory"/>

        <annotator language="Solidity" implementationClass="me.serce.solidity.ide.annotation.SolidityAnnotator"/>

        <renamePsiElementProcessor implementation="me.serce.solidity.ide.refactoring.RenameContractProcessor"/>
        <renamePsiElementProcessor implementation="me.serce.solidity.ide.refactoring.RenameConstructorProcessor"/>

        <!-- Commenter -->
        <lang.commenter language="Solidity" implementationClass="me.serce.solidity.ide.SolCommenter"/>

        <!-- Brace Matcher -->
        <lang.braceMatcher language="Solidity" implementationClass="me.serce.solidity.ide.SolBraceMatcher"/>

        <!-- Quote Handlers -->
        <lang.quoteHandler language="Solidity" implementationClass="me.serce.solidity.ide.SolQuoteTokenHandler"/>

        <lang.documentationProvider language="Solidity" implementationClass="me.serce.solidity.ide.hints.SolDocumentationProvider"/>

        <!-- Hints -->
        <codeInsight.typeInfo language="Solidity"
                              implementationClass="me.serce.solidity.ide.hints.SolExpressionTypeProvider"/>
        <codeInsight.parameterInfo language="Solidity"
                                   implementationClass="me.serce.solidity.ide.hints.SolParameterInfoHandler"/>

        <completion.contributor language="Solidity"
                                implementationClass="me.serce.solidity.lang.completion.SolBaseTypesCompletionContributor"/>
        <completion.contributor language="Solidity"
                                implementationClass="me.serce.solidity.lang.completion.SolKeywordCompletionContributor"/>
        <completion.contributor language="Solidity"
                                implementationClass="me.serce.solidity.lang.completion.SolFunctionCompletionContributor"/>
        <completion.contributor language="Solidity"
                                implementationClass="me.serce.solidity.lang.completion.SolContextCompletionContributor"/>
        <completion.contributor language="Solidity"
                                implementationClass="me.serce.solidity.lang.completion.SolNatSpecCompletionContributor"/>

        <lang.formatter language="Solidity"
                        implementationClass="me.serce.solidity.ide.formatting.SolidityFormattingModelBuilder"/>

        <codeInsight.lineMarkerProvider language="Solidity"
                                        implementationClass="me.serce.solidity.ide.annotation.SolidityLineMarkerProvider"/>


        <internalFileTemplate name="Solidity Contract"/>
        <internalFileTemplate name="Solidity Library"/>

        <stubIndex implementation="me.serce.solidity.lang.stubs.SolNamedElementIndex"/>
        <stubIndex implementation="me.serce.solidity.lang.stubs.SolGotoClassIndex"/>
        <stubIndex implementation="me.serce.solidity.lang.stubs.SolModifierIndex"/>
        <stubIndex implementation="me.serce.solidity.lang.stubs.SolEventIndex"/>
        <stubIndex implementation="me.serce.solidity.lang.stubs.SolErrorIndex"/>
        <stubIndex implementation="me.serce.solidity.lang.stubs.SolFunctionIndex"/>
        <stubIndex implementation="me.serce.solidity.lang.stubs.SolImportIndex"/>

        <gotoClassContributor implementation="me.serce.solidity.ide.navigation.SolClassNavigationContributor"/>
        <gotoSymbolContributor implementation="me.serce.solidity.ide.navigation.SolSymbolNavigationContributor"/>
        <definitionsScopedSearch implementation="me.serce.solidity.ide.navigation.SolContractImplementationSearcher"/>

        <lang.foldingBuilder language="Solidity" implementationClass="me.serce.solidity.ide.SolidityFoldingBuilder"/>

        <lang.findUsagesProvider language="Solidity" implementationClass="me.serce.solidity.ide.SolFindUsagesProvider"/>

        <spellchecker.support language="Solidity" implementationClass="me.serce.solidity.ide.SolSpellcheckingStrategy"/>

        <!-- Code style -->

        <codeStyleSettingsProvider implementation="me.serce.solidity.ide.formatting.SolCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider
                implementation="me.serce.solidity.ide.formatting.SolLanguageCodeStyleSettingsProvider"/>

        <!-- Color settings -->
        <colorSettingsPage implementation="me.serce.solidity.ide.colors.SolColorSettingsPage"/>


        <lang.psiStructureViewFactory language="Solidity"
                                      implementationClass="me.serce.solidity.ide.SolPsiStructureViewFactory"/>

        <lang.inspectionSuppressor language="Solidity"
                                   implementationClass="me.serce.solidity.ide.inspections.SolInspectionSuppressor"/>

        <localInspection language="Solidity" groupName="Solidity"
                         displayName="Suicide is deprecated. Use selfdestruct instead EIP 6"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="me.serce.solidity.ide.inspections.SelfdestructRenameInspection"/>

        <localInspection language="Solidity" groupName="Solidity"
                         displayName="Function has no modifiers and might modify owners of the contract"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="me.serce.solidity.ide.inspections.UnprotectedFunctionInspection"/>

        <localInspection language="Solidity" groupName="Solidity"
                         displayName="Name can not be resolved"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="me.serce.solidity.ide.inspections.ResolveNameInspection"/>

        <localInspection language="Solidity" groupName="Solidity"
                         displayName="No return statement"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="me.serce.solidity.ide.inspections.NoReturnInspection"/>

        <localInspection language="Solidity" groupName="Solidity"
                         displayName="Linearization impossible"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="me.serce.solidity.ide.inspections.LinearizationImpossibleInspection"/>

        <localInspection language="Solidity" groupName="Solidity"
                         displayName="Function call arguments are not matched with the parameters of function definition"
                         enabledByDefault="true"
                         level="ERROR"
                         implementationClass="me.serce.solidity.ide.inspections.ValidateFunctionArgumentsInspection"/>

        <localInspection language="Solidity" groupName="Solidity"
                         displayName="Visibility modifier not specified for a function or state variable"
                         enabledByDefault="true"
                         level="WEAK WARNING"
                         implementationClass="me.serce.solidity.ide.inspections.VisibilityModifierInspection"/>


        <errorHandler implementation="me.serce.solidity.ide.SentryReportSubmitter"/>

        <defaultLiveTemplates file="/liveTemplates/Solidity.xml"/>
        <liveTemplateContext
                implementation="me.serce.solidity.ide.liveTemplates.SolTemplateContextType"/>
    </extensions>

    <actions>
        <action id="solidity.file.create"
                class="me.serce.solidity.ide.actions.SolCreateFileAction"
                text="Smart Contract" description="Create new solidity contract">
            <add-to-group group-id="NewGroup" anchor="after" relative-to-action="NewDir"/>
        </action>
    </actions>

</idea-plugin>
